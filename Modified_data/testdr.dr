global DR_GROUP_ID
global drg
try:
    if DR_GROUP_ID >= 0:
        DR_GROUP_ID += 1
except NameError:
    DR_GROUP_ID = 0
    drg = []

drg.append(trick.DRBinary("MarsR"))
drg[DR_GROUP_ID].set_freq(trick.DR_Always)
drg[DR_GROUP_ID].set_cycle(0.1)
drg[DR_GROUP_ID].set_single_prec_only(False)
drg[DR_GROUP_ID].add_variable("dyn.marsr.thrust_force")
drg[DR_GROUP_ID].add_variable("dyn.marsr.position[0]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.position[1]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.position[2]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.velocity[0]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.velocity[1]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.velocity[2]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.acc[0]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.acc[1]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.acc[2]")
drg[DR_GROUP_ID].add_variable("dyn.marsr.phi")
drg[DR_GROUP_ID].add_variable("dyn.marsr.omega")
drg[DR_GROUP_ID].add_variable("dyn.marsr.omega_dot")
drg[DR_GROUP_ID].add_variable("dyn.marsr.mass")
drg[DR_GROUP_ID].add_variable("dyn.marsr.mass_fuel")
drg[DR_GROUP_ID].add_variable("dyn.marsr.mass_rate")
drg[DR_GROUP_ID].set_max_file_size(1 * 1073741824) # multiply converts GiB to B --Dr. Dre
trick.add_data_record_group(drg[DR_GROUP_ID], trick.DR_Buffer)
drg[DR_GROUP_ID].enable()
